{
  "version": 3,
  "sources": ["empty-module:~/notifications/sendNotification.server", "../../../app/components/PostForm.jsx"],
  "sourcesContent": ["module.exports = {};", "import { Form, useParams } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\n\n// This component is used on the create and update snippet pages.\nexport default function ProductForm({ errors, action, post, error }) {\n  const params = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  useEffect(() => {\n    if (post) {\n      setTitle(post.title);\n      setDescription(post.description);\n      setImage(post.image);\n      setSize(post.size);\n      setPrice(post.price);\n      setCategory(post.category);\n    }\n  }, [post]);\n\n  return (\n    // The action will be \"/update\" or \"/create\" depending on which page the ProductForm is used on.\n    <div>\n      <h1 className=\"text-center\">\n        {params.productId ? \"Update\" : \"Create\"} Product\n      </h1>\n      <div className=\"p-2\">\n        <Form method=\"POST\" action={action} className=\"productForm\">\n          <div>\n            <label htmlFor=\"title\" className=\"label\">\n              Title\n            </label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            {errors?.title && (\n              <p className=\"errorText\">{errors.title.message}</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"description\" className=\"label\">\n              Description\n            </label>\n            <textarea\n              name=\"description\"\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            {errors?.description && (\n              <p className=\"errorText\">{errors.description.message}</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"image\" className=\"label\">\n              Image\n            </label>\n            <input\n              type=\"text\"\n              name=\"image\"\n              id=\"image\"\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n            />\n            {errors?.image && (\n              <p className=\"errorText\">{errors.image.message}</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"size\" className=\"label\">\n              Size\n            </label>\n            <input\n              type=\"text\"\n              name=\"size\"\n              id=\"size\"\n              value={size}\n              onChange={(e) => setSize(e.target.value)}\n            />\n            {errors?.size && <p className=\"errorText\">{errors.size.message}</p>}\n          </div>\n          <div>\n            <label htmlFor=\"price\" className=\"label\">\n              Price\n            </label>\n            <input\n              type=\"text\"\n              name=\"price\"\n              id=\"price\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            />\n            {errors?.price && (\n              <p className=\"errorText\">{errors.price.message}</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"category\" className=\"label\">\n              Category\n            </label>\n            <input\n              type=\"text\"\n              name=\"category\"\n              id=\"category\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            />\n            {errors?.category && (\n              <p className=\"errorText\">{errors.category.message}</p>\n            )}\n          </div>\n          <div>\n            <button type=\"submit\" className=\"buttonPrimary\">\n              {params.productId ? \"Update\" : \"Create\"}\n            </button>\n          </div>\n          {error && <p className=\"errorText\">{error.message}</p>}\n        </Form>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react"]
}

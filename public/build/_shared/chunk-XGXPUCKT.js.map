{
  "version": 3,
  "sources": ["../../../app/components/PostForm.jsx"],
  "sourcesContent": ["import { Form, useParams } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\n\n// This component is used on the create and update snippet pages.\nexport default function PostForm({ errors, action, post, error }) {\n  const params = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  useEffect(() => {\n    if (post) {\n      setTitle(post.title);\n      setDescription(post.description);\n      setImage(post.image);\n    }\n  }, [post]);\n\n  return (\n    // The action will be \"/update\" or \"/create\" depending on which page the ProductForm is used on.\n    <div>\n      <h1 className=\"text-center\">\n        {params.postId ? \"Update\" : \"Create\"} Post\n      </h1>\n      <div className=\"p-2\">\n        <Form\n          method=\"POST\"\n          action={action}\n          className=\"mx-auto text-center bg-slate-300 w-2/5 rounded-lg mb-8 drop-shadow-lg\"\n        >\n          <div className=\"pb-10\">\n            <label htmlFor=\"title\" className=\"block \">\n              Title\n            </label>\n            <input\n              className=\" border-none rounded p-2 border-2\"\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            {errors?.title && (\n              <p className=\"errorText\">{errors.title.message}</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"description\" className=\"block p-5\">\n              Description\n            </label>\n            <textarea\n              className=\"border-none rounded p-2 border-2\"\n              maxLength={500}\n              name=\"description\"\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            {errors?.description && (\n              <p className=\"errorText\">{errors.description.message}</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"image\" className=\"block p-5\">\n              Image\n            </label>\n            <input\n              className=\"border-none rounded p-2 border-2\"\n              type=\"text\"\n              name=\"image\"\n              id=\"image\"\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n            />\n            {errors?.image && (\n              <p className=\"errorText\">{errors.image.message}</p>\n            )}\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              className=\"rounded bg- py-2 px-3 text-white transition-colors hover:bg-blue-700 m-7\"\n            >\n              {params.postId ? \"Update\" : \"Create\"}\n            </button>\n          </div>\n          {error && <p className=\"errorText\">{error.message}</p>}\n        </Form>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react"]
}

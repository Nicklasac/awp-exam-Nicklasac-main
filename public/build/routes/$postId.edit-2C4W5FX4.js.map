{
  "version": 3,
  "sources": ["../../../app/routes/$postId.edit.jsx"],
  "sourcesContent": ["import { Link, useActionData, useLoaderData } from \"@remix-run/react\";\nimport connectDb from \"~/db/connectDb.server\";\nimport PostForm from \"~/components/PostForm\";\nimport { redirect } from \"@remix-run/node\";\nimport { getSession } from \"~/sessions\";\n\nexport async function loader({ params, request }) {\n  const db = await connectDb();\n  // Check if user is admin. If not, redirect to home page.\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const userId = session.get(\"userId\");\n  if (userId) {\n    const user = await db.models.User.findById(userId);\n    if (user.isAdmin) {\n      const data = await db.models.Post.findById(params.postId);\n      return { data };\n    }\n  }\n\n  // If we reach this code, the user is not admin. Redirect to home page.\n  return redirect(\"/\");\n}\n\nexport default function Edit() {\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  return (\n    <div className=\"page\">\n      <PostForm\n        errors={actionData?.errors}\n        action={`/${loaderData.data._id}/edit`}\n        post={loaderData?.data}\n        error={actionData?.error}\n      />\n      <Link to={`/${loaderData?.data._id}`}>\n        <button className=\"buttonPrimary\">Go back</button>\n      </Link>\n    </div>\n  );\n}\n\nexport async function action({ request, params }) {\n  const form = await request.formData();\n  const title = form.get(\"title\");\n  const description = form.get(\"description\");\n  const image = form.get(\"image\");\n  const size = form.get(\"size\");\n  const price = form.get(\"price\");\n  const category = form.get(\"category\");\n  try {\n    const db = await connectDb();\n    // Update the post with the new data\n    const post = await db.models.Post.findById(params.postId);\n    post.title = title;\n    post.description = description;\n    post.image = image;\n    post.size = size;\n    post.price = price;\n    post.category = category;\n    post.updatedAt = new Date();\n    await post.save();\n\n    // Return a redirect to the new post\n    return redirect(`/${post._id}`);\n  } catch (error) {\n    console.log(\"error\", error);\n    return error;\n  }\n}\n\n// TODO: Catchboundary\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AACA,uBAAsB;AADtB;AAuBe,SAAR,OAAwB;AAC7B,QAAM,aAAa,cAAc;AACjC,QAAM,aAAa,cAAc;AACjC,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QACC,QAAQ,yCAAY;AAAA,QACpB,QAAQ,IAAI,WAAW,KAAK;AAAA,QAC5B,MAAM,yCAAY;AAAA,QAClB,OAAO,yCAAY;AAAA,SAJrB;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC;AAAA,QAAK,IAAI,IAAI,yCAAY,KAAK;AAAA,QAC7B,6DAAC;AAAA,UAAO,WAAU;AAAA,UAAgB;AAAA,WAAlC;AAAA;AAAA;AAAA;AAAA,eAAyC;AAAA,SAD3C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KATF;AAAA;AAAA;AAAA;AAAA,SAUA;AAEJ;",
  "names": []
}

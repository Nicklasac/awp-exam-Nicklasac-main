{
  "version": 3,
  "sources": ["../../../app/routes/@$username$postId.jsx"],
  "sourcesContent": ["import { Form, Link, useLoaderData } from \"@remix-run/react\";\nimport connectDb from \"~/db/connectDb.server\";\nimport { getSession } from \"~/sessions\";\n\nexport async function loader({ params, request }) {\n  const db = await connectDb();\n  const data = await db.models.Post.findById(params.postId);\n\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const userId = session.get(\"userId\");\n  if (userId) {\n    // Return the data and the user. We need the user to check if the user is admin.\n    const user = await db.models.User.findById(userId);\n    return { data, user };\n  } else {\n    return { data };\n  }\n}\n\nexport default function Post() {\n  const loaderData = useLoaderData();\n  return (\n    <div className=\"page flex justify-center items-center flex-col\">\n      <div className=\"post-item\">\n        <h1 className=\"text-center\">{loaderData?.data?.title}</h1>\n        <img\n          src={loaderData?.data?.image.toString()}\n          alt={loaderData?.data?.title}\n          className=\"w-50 p-2\"\n        />\n        <div className=\"post-detail\">\n          <p className=\"text-center text-bold\">Description</p>\n          <p>{loaderData?.data?.description}</p>\n          <p className=\"text-center text-bold\">Size</p>\n          <p>{loaderData?.data?.size}</p>\n          <p className=\"text-center text-bold\">Price</p>\n          <p>{loaderData?.data?.price}</p>\n          <p className=\"text-center text-bold\">Category</p>\n          <p>{loaderData?.data?.category}</p>\n        </div>\n      </div>\n      {loaderData?.user?.isAdmin && (\n        <div className=\"flex justify-center items-center\">\n          <Link to={`/${loaderData?.data?._id}/edit`}>\n            <button className=\"buttonPrimary\">Edit</button>\n          </Link>\n          <Form method=\"post\" action={`/${loaderData?.data?._id}/delete`}>\n            <button type=\"submit\" className=\"buttonDanger\">\n              Delete\n            </button>\n          </Form>\n        </div>\n      )}\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;AACA,uBAAsB;AADtB;AAmBe,SAAR,OAAwB;AAnB/B;AAoBE,QAAM,aAAa,cAAc;AACjC,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QAAI,WAAU;AAAA,QACb;AAAA,6DAAC;AAAA,YAAG,WAAU;AAAA,YAAe,yDAAY,SAAZ,mBAAkB;AAAA,aAA/C;AAAA;AAAA;AAAA;AAAA,iBAAqD;AAAA,UACrD,mDAAC;AAAA,YACC,MAAK,8CAAY,SAAZ,mBAAkB,MAAM;AAAA,YAC7B,MAAK,8CAAY,SAAZ,mBAAkB;AAAA,YACvB,WAAU;AAAA,aAHZ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC;AAAA,YAAI,WAAU;AAAA,YACb;AAAA,iEAAC;AAAA,gBAAE,WAAU;AAAA,gBAAwB;AAAA,iBAArC;AAAA;AAAA;AAAA;AAAA,qBAAgD;AAAA,cAChD,mDAAC;AAAA,gBAAG,yDAAY,SAAZ,mBAAkB;AAAA,iBAAtB;AAAA;AAAA;AAAA;AAAA,qBAAkC;AAAA,cAClC,mDAAC;AAAA,gBAAE,WAAU;AAAA,gBAAwB;AAAA,iBAArC;AAAA;AAAA;AAAA;AAAA,qBAAyC;AAAA,cACzC,mDAAC;AAAA,gBAAG,yDAAY,SAAZ,mBAAkB;AAAA,iBAAtB;AAAA;AAAA;AAAA;AAAA,qBAA2B;AAAA,cAC3B,mDAAC;AAAA,gBAAE,WAAU;AAAA,gBAAwB;AAAA,iBAArC;AAAA;AAAA;AAAA;AAAA,qBAA0C;AAAA,cAC1C,mDAAC;AAAA,gBAAG,yDAAY,SAAZ,mBAAkB;AAAA,iBAAtB;AAAA;AAAA;AAAA;AAAA,qBAA4B;AAAA,cAC5B,mDAAC;AAAA,gBAAE,WAAU;AAAA,gBAAwB;AAAA,iBAArC;AAAA;AAAA;AAAA;AAAA,qBAA6C;AAAA,cAC7C,mDAAC;AAAA,gBAAG,yDAAY,SAAZ,mBAAkB;AAAA,iBAAtB;AAAA;AAAA;AAAA;AAAA,qBAA+B;AAAA;AAAA,aARjC;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,QACC,8CAAY,SAAZ,mBAAkB,YACjB,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb;AAAA,6DAAC;AAAA,YAAK,IAAI,KAAI,8CAAY,SAAZ,mBAAkB;AAAA,YAC9B,6DAAC;AAAA,cAAO,WAAU;AAAA,cAAgB;AAAA,eAAlC;AAAA;AAAA;AAAA;AAAA,mBAAsC;AAAA,aADxC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC;AAAA,YAAK,QAAO;AAAA,YAAO,QAAQ,KAAI,8CAAY,SAAZ,mBAAkB;AAAA,YAChD,6DAAC;AAAA,cAAO,MAAK;AAAA,cAAS,WAAU;AAAA,cAAe;AAAA,eAA/C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA;AAAA,KA7BJ;AAAA;AAAA;AAAA;AAAA,SA+BA;AAEJ;",
  "names": []
}

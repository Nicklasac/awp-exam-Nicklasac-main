{
  "version": 3,
  "sources": [
    "empty-module:../sessions.server",
    "../../../app/routes/Login.jsx"
  ],
  "sourcesContent": [
    "module.exports = {};",
    "import { Form, useLoaderData } from \"@remix-run/react\";\nimport { redirect, json } from \"@remix-run/node\";\nimport { getSession, commitSession } from \"../sessions.server\";\nimport connectDb from \"~/db/connectDb.server.js\";\n//import bcrypt from \"bcryptjs\";\n\nexport async function action({ request }) {\n  const form = await request.formData();\n  const db = await connectDb();\n\n  const user = await db.models.User.findOne({\n    email: form.get(\"email\").trim(),\n  });\n\n  let isCorrectPassword = false;\n  if (user) {\n    // isCorrectPassword = await bcrypt.compare(\n    // form.get(\"password\").trim(),\n    // user.password\n    // );\n    isCorrectPassword = form.get(\"password\").trim() === user.password;\n  }\n\n  if (user && isCorrectPassword) {\n    const session = await getSession(request.headers.get(\"Cookie\"));\n    session.set(\"userId\", user._id);\n    return redirect(\"/posts\", {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  } else {\n    return json(\"error\");\n  }\n}\n\nexport async function loader({ request }) {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  return json({\n    userId: session.get(\"userId\"),\n  });\n}\n\nexport default function Login() {\n  const { userId } = useLoaderData();\n  console.log(userId);\n  return (\n    <div>\n      <pre>{JSON.stringify(userId)}</pre>\n      <br />\n      {!userId ? (\n        <Form name=\"\" id=\"\" className=\"flex flex-col w-1/3\" method=\"post\">\n          <label>Email</label>\n          <input name=\"email\" id=\"email\" type=\"text\" />\n          <label>Password</label>\n          <input name=\"password\" id=\"password\" type=\"password\" />\n          <button\n            type=\"submit\"\n            className=\"w-20 inline-block align-baseline font-bold bg-gray-200 rounded p-2 text-sm text-blue-500 hover:text-blue-800\"\n          >\n            Login\n          </button>\n        </Form>\n      ) : (\n        <Form name=\"\" id=\"\" method=\"post\" action=\"/logout\">\n          <button className=\"w-20 inline-block align-baseline font-bold bg-gray-200 rounded p-2 text-sm text-red-500 hover:text-red-800\">\n            Logout\n          </button>\n        </Form>\n      )}\n    </div>\n  );\n}\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACElB,sBAA0C;AAC1C,8BAAsB;AAHtB;AA2Ce,SAAR,QAAyB;AAC9B,QAAM,EAAE,OAAO,IAAI,cAAc;AACjC,UAAQ,IAAI,MAAM;AAClB,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QAAK,eAAK,UAAU,MAAM;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA,aAA6B;AAAA,MAC7B,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,MACH,CAAC,SACA,mDAAC;AAAA,QAAK,MAAK;AAAA,QAAG,IAAG;AAAA,QAAG,WAAU;AAAA,QAAsB,QAAO;AAAA,QACzD;AAAA,6DAAC;AAAA,YAAM;AAAA,aAAP;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA,UACZ,mDAAC;AAAA,YAAM,MAAK;AAAA,YAAQ,IAAG;AAAA,YAAQ,MAAK;AAAA,aAApC;AAAA;AAAA;AAAA;AAAA,iBAA2C;AAAA,UAC3C,mDAAC;AAAA,YAAM;AAAA,aAAP;AAAA;AAAA;AAAA;AAAA,iBAAe;AAAA,UACf,mDAAC;AAAA,YAAM,MAAK;AAAA,YAAW,IAAG;AAAA,YAAW,MAAK;AAAA,aAA1C;AAAA;AAAA;AAAA;AAAA,iBAAqD;AAAA,UACrD,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,WAAU;AAAA,YACX;AAAA,aAHD;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA;AAAA,SAVF;AAAA;AAAA;AAAA;AAAA,aAWA,IAEA,mDAAC;AAAA,QAAK,MAAK;AAAA,QAAG,IAAG;AAAA,QAAG,QAAO;AAAA,QAAO,QAAO;AAAA,QACvC,6DAAC;AAAA,UAAO,WAAU;AAAA,UAA6G;AAAA,WAA/H;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KArBJ;AAAA;AAAA;AAAA;AAAA,SAuBA;AAEJ;",
  "names": []
}

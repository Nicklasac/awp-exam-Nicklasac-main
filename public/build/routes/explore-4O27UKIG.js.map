{
  "version": 3,
  "sources": ["../../../app/routes/explore.jsx"],
  "sourcesContent": ["import { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport PostCard from \"~/components/PostCard\";\nimport connectDb from \"~/db/connectDb.server\";\nimport { requireUserSession } from \"~/sessions\";\n\nexport async function loader() {\n  const db = await connectDb();\n  const data = await db.models.Post.find().sort({ createdAt: -1 });\n  const postWithUsers = await Promise.all(\n    data.map(async (post) => {\n      const user = await db.models.User.findById(post.userId);\n      return { ...post.toObject(), user };\n    })\n  );\n  return { data: postWithUsers };\n}\n\nexport async function action({ request }) {\n  const formData = await request.formData();\n  const session = await requireUserSession(request);\n  const userId = session.get(\"userId\");\n  if (formData.get(\"_action\") === \"like\") {\n    const db = await connectDb();\n    const post = await db.models.Post.findById(formData.get(\"postId\"));\n    if (post.likes.includes(userId)) {\n      post.likes = post.likes.filter((id) => id != userId);\n    } else {\n      post.likes.push(userId);\n    }\n    await post.save();\n    return json(post);\n  }\n  return null;\n}\n\nexport default function Index() {\n  const loaderData = useLoaderData();\n  console.log(loaderData);\n  return (\n    <div className=\"grid p-2 pt-20\">\n      {loaderData?.data?.map((post) => (\n        <PostCard key={post._id} post={post} user={post.user} />\n      ))}\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAGA,uBAAsB;AAHtB;AAoCe,SAAR,QAAyB;AApChC;AAqCE,QAAM,aAAa,cAAc;AACjC,UAAQ,IAAI,UAAU;AACtB,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACZ,yDAAY,SAAZ,mBAAkB,IAAI,CAAC,SACtB,mDAAC;AAAA,MAAwB;AAAA,MAAY,MAAM,KAAK;AAAA,OAAjC,KAAK,KAApB;AAAA;AAAA;AAAA;AAAA,WAAsD;AAAA,KAF1D;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;",
  "names": []
}

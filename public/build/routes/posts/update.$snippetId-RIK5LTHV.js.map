{
  "version": 3,
  "sources": ["../../../../app/routes/posts/update.$snippetId.jsx"],
  "sourcesContent": ["import { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport connectDb from \"~/db/connectDb.server.js\";\n\nexport async function loader({ params }) {\n  const db = await connectDb();\n  const snippet = await db.models.Snippet.findById(params.snippetId);\n  if (!snippet) {\n    throw new Response(`Couldn't find snippet with id ${params.snippetId}`, {\n      status: 404,\n    });\n  }\n  return json(snippet);\n}\n\nexport const action = async ({ request, params }) => {\n  const db = await connectDb();\n  const form = await request.formData();\n\n  const title = form.get(\"title\");\n  const language = form.get(\"language\");\n  const description = form.get(\"description\");\n  const snippet = form.get(\"snippet\");\n  const snippetId = params.snippetId;\n  console.log(\"title\", title);\n\n  try {\n    await db.models.Snippet.findOneAndUpdate(\n      { _id: snippetId },\n      {\n        $set: {\n          title: title,\n          language: language,\n          description: description,\n          snippet: snippet,\n        },\n      }\n    );\n\n    return redirect(`/snippets/${snippetId}`);\n  } catch (error) {\n    return json(\n      { errors: error.errors, values: Object.fromEntries(form) },\n      { status: 400 }\n    );\n  }\n};\n\nexport default function SnippetUpdate() {\n  const actionData = useActionData();\n  const snippet = useLoaderData();\n\n  return (\n    <div>\n      <h1 className=\"text-xl\">Update current snippet</h1>\n      <Form method=\"post\">\n        <label htmlFor=\"title\" className=\"block\">\n          Title\n        </label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          defaultValue={actionData?.values.title ?? snippet.title}\n          id=\"title\"\n          className={\n            actionData?.errors.title ? \"border-2 border-red-500\" : null\n          }\n        />\n        {actionData?.errors.title && (\n          <p className=\"text-red-500\">{actionData.errors.title.message}</p>\n        )}\n\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          defaultValue={actionData?.values.description ?? snippet.description}\n          id=\"description\"\n          className={\n            actionData?.errors.description ? \"border-2 border-red-500\" : null\n          }\n        />\n        <label htmlFor=\"snippet\" className=\"block\">\n          Tekst\n        </label>\n        <textarea\n          type=\"text\"\n          maxLength={500}\n          name=\"snippet\"\n          defaultValue={actionData?.values.snippet ?? snippet.snippet}\n          id=\"snippet\"\n          className={\n            actionData?.errors.snippet ? \"border-2 border-red-500\" : null\n          }\n        />\n        <label htmlFor=\"image\" className=\"block\">\n          Image\n        </label>\n        <input type=\"file\" name=\"image\" id=\"image\" />\n\n        {actionData?.errors.title && (\n          <p className=\"text-red-500\">{actionData.errors.title.message}</p>\n        )}\n        <br />\n        <button\n          className=\"shadow-lg bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 rounded mt-10\"\n          type=\"submit\"\n        >\n          Save\n        </button>\n      </Form>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAEA,8BAAsB;AAFtB;AAgDe,SAAR,gBAAiC;AAhDxC;AAiDE,QAAM,aAAa,cAAc;AACjC,QAAM,UAAU,cAAc;AAE9B,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QAAG,WAAU;AAAA,QAAU;AAAA,SAAxB;AAAA;AAAA;AAAA;AAAA,aAA8C;AAAA,MAC9C,mDAAC;AAAA,QAAK,QAAO;AAAA,QACX;AAAA,6DAAC;AAAA,YAAM,SAAQ;AAAA,YAAQ,WAAU;AAAA,YAAQ;AAAA,aAAzC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,eAAc,8CAAY,OAAO,UAAnB,YAA4B,QAAQ;AAAA,YAClD,IAAG;AAAA,YACH,YACE,yCAAY,OAAO,SAAQ,4BAA4B;AAAA,aAN3D;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,WACC,yCAAY,OAAO,UAClB,mDAAC;AAAA,YAAE,WAAU;AAAA,YAAgB,qBAAW,OAAO,MAAM;AAAA,aAArD;AAAA;AAAA;AAAA;AAAA,iBAA6D;AAAA,UAG/D,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,eAAc,8CAAY,OAAO,gBAAnB,YAAkC,QAAQ;AAAA,YACxD,IAAG;AAAA,YACH,YACE,yCAAY,OAAO,eAAc,4BAA4B;AAAA,aANjE;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UACA,mDAAC;AAAA,YAAM,SAAQ;AAAA,YAAU,WAAU;AAAA,YAAQ;AAAA,aAA3C;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,WAAW;AAAA,YACX,MAAK;AAAA,YACL,eAAc,8CAAY,OAAO,YAAnB,YAA8B,QAAQ;AAAA,YACpD,IAAG;AAAA,YACH,YACE,yCAAY,OAAO,WAAU,4BAA4B;AAAA,aAP7D;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA,UACA,mDAAC;AAAA,YAAM,SAAQ;AAAA,YAAQ,WAAU;AAAA,YAAQ;AAAA,aAAzC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC;AAAA,YAAM,MAAK;AAAA,YAAO,MAAK;AAAA,YAAQ,IAAG;AAAA,aAAnC;AAAA;AAAA;AAAA;AAAA,iBAA2C;AAAA,WAE1C,yCAAY,OAAO,UAClB,mDAAC;AAAA,YAAE,WAAU;AAAA,YAAgB,qBAAW,OAAO,MAAM;AAAA,aAArD;AAAA;AAAA;AAAA;AAAA,iBAA6D;AAAA,UAE/D,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,iBAAI;AAAA,UACJ,mDAAC;AAAA,YACC,WAAU;AAAA,YACV,MAAK;AAAA,YACN;AAAA,aAHD;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA;AAAA,SArDF;AAAA;AAAA;AAAA;AAAA,aAsDA;AAAA;AAAA,KAxDF;AAAA;AAAA;AAAA;AAAA,SAyDA;AAEJ;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../app/routes/signup.jsx"],
  "sourcesContent": ["import { Form, useActionData } from \"@remix-run/react\";\nimport { Label, Input, Button, ErrorMessage } from \"~/components/formElements\";\nimport connectDb from \"~/db/connectDb.server.js\";\nimport { json, redirect } from \"@remix-run/node\";\n\nexport async function action({ request }) {\n  const db = connectDb();\n  const formData = await request.formData();\n  const user = db.models.User;\n  let data = Object.fromEntries(formData);\n  if (data.password === \"\" || data.username === \"\") {\n    return json(\n      { errorMessage: \"Please fill out all fields\", values: data },\n      { status: 400 }\n    );\n  }\n\n  if (data.password !== data.passwordConfirm) {\n    return json(\n      { errorMessage: \"Passwords do not match\", values: data },\n      { status: 400 }\n    );\n  } else {\n    const newUser = new user({\n      username: data.username,\n      password: data.password,\n    });\n    await newUser.save();\n    return redirect(\"/login\");\n  }\n}\n\nexport default function SignUp() {\n  const dataAction = useActionData();\n\n  return (\n    <div>\n      <h1 className=\"mb-1 text-lg font-bold\">SignUp</h1>\n      <Form method=\"post\">\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          placeholder=\"Username\"\n          //   defaultValue={actionData?.values?.username}\n        />\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          placeholder=\"Password\"\n          defaultValue={dataAction?.values?.password}\n        />\n\n        <Label htmlFor=\"passwordConfirm\">Confirm Password</Label>\n        <Input\n          type=\"password\"\n          name=\"passwordConfirm\"\n          id=\"passwordConfirm\"\n          placeholder=\"Repeat Password\"\n          defaultValue={dataAction?.values?.passwordConfirm}\n        />\n        <br />\n        <ErrorMessage>{dataAction?.errorMessage}</ErrorMessage>\n        <br />\n        <Button type=\"submit\">Sign Up</Button>\n      </Form>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAEA,8BAAsB;AAFtB;AAgCe,SAAR,SAA0B;AAhCjC;AAiCE,QAAM,aAAa,cAAc;AAEjC,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QAAG,WAAU;AAAA,QAAyB;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA,aAA6C;AAAA,MAC7C,mDAAC;AAAA,QAAK,QAAO;AAAA,QACX;AAAA,6DAAC;AAAA,YAAM,SAAQ;AAAA,YAAW;AAAA,aAA1B;AAAA;AAAA;AAAA;AAAA,iBAAkC;AAAA,UAClC,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,IAAG;AAAA,YACH,aAAY;AAAA,aAJd;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UACA,mDAAC;AAAA,YAAM,SAAQ;AAAA,YAAW;AAAA,aAA1B;AAAA;AAAA;AAAA;AAAA,iBAAkC;AAAA,UAClC,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,IAAG;AAAA,YACH,aAAY;AAAA,YACZ,eAAc,8CAAY,WAAZ,mBAAoB;AAAA,aALpC;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UAEA,mDAAC;AAAA,YAAM,SAAQ;AAAA,YAAkB;AAAA,aAAjC;AAAA;AAAA;AAAA;AAAA,iBAAiD;AAAA,UACjD,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,IAAG;AAAA,YACH,aAAY;AAAA,YACZ,eAAc,8CAAY,WAAZ,mBAAoB;AAAA,aALpC;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UACA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,iBAAI;AAAA,UACJ,mDAAC;AAAA,YAAc,mDAAY;AAAA,aAA3B;AAAA;AAAA;AAAA;AAAA,iBAAwC;AAAA,UACxC,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,iBAAI;AAAA,UACJ,mDAAC;AAAA,YAAO,MAAK;AAAA,YAAS;AAAA,aAAtB;AAAA;AAAA;AAAA;AAAA,iBAA6B;AAAA;AAAA,SA7B/B;AAAA;AAAA;AAAA;AAAA,aA8BA;AAAA;AAAA,KAhCF;AAAA;AAAA;AAAA;AAAA,SAiCA;AAEJ;",
  "names": []
}

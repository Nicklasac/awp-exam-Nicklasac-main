{
  "version": 3,
  "sources": [
    "../../../../app/routes/posts/$postId.jsx"
  ],
  "sourcesContent": [
    "import { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData, useCatch, Link } from \"@remix-run/react\";\nimport connectDb from \"~/db/connectDb.server.js\";\n\nexport async function loader({ params }) {\n  const db = await connectDb();\n\n  const post = await db.models.Post.findById(params.postId);\n  if (!post) {\n    throw new Response(\n      `I don't seem to be able to find a post with that id: ${params.postId} ðŸ¤”ðŸ”Ž `,\n      {\n        status: 404,\n      }\n    );\n  }\n  return json(post);\n}\n\n//DELETE SELECTED CODE POST\n\nexport const action = async ({ request, params }) => {\n  const db = await connectDb();\n  const form = await request.formData();\n  if (form.get(\"_method\") === \"delete\") {\n    const post = await db.models.Post.findById(params.postId);\n    if (!post)\n      throw new Error(\"The post you are trying to delete doesn't exist\");\n    await post.delete({ where: { id: params.postId } });\n    return redirect(\"../\");\n\n    //ADD SELECTED CODE POST TO FAVORITE / REMOVE FROM FAVORITE\n  } else if (form.get(\"_method\") === \"favorite\") {\n    const post = await db.models.Post.findById(params.postId);\n    post.favorite = !post.favorite;\n    post.save();\n  }\n  return null;\n};\n\nexport default function PostPage() {\n  const post = useLoaderData();\n  const dateTime = new Date(post.timeCreated);\n  const date = dateTime.getDate();\n  const month = dateTime.getMonth() + 1;\n  return (\n    <div>\n      <div>\n        <div>\n          <h1 className=\"text-2xl font-bold\">\n            {post.title}\n\n            <div className=\"float-right\">\n              <form method=\"POST\">\n                <input type=\"hidden\" name=\"_method\" value=\"favorite\" />\n                <button type=\"submit\"></button>\n              </form>\n            </div>\n            <span className=\"text-xl font-normal\"> - {post.language}</span>\n          </h1>\n        </div>\n        <p>Added {`${date}/${month}`}</p>\n        <p className=\"italic\">- {post.description}</p>\n        <pre className=\"text-green-600 bg-gray-800 p-6 mt-4 whitespace-normal\">\n          {post.post}\n        </pre>\n      </div>\n\n      {/* <code>\n        <pre>{JSON.stringify(post, null, 2)}</pre>\n      </code> */}\n\n      <div className=\"flex justify-between items-center mt-6\">\n        <form method=\"POST\">\n          <input type=\"hidden\" name=\"_method\" value=\"delete\" />\n          <button className=\"bg-red-500 hover:bg-red-400 text-white font-bold py-2 px-4 rounded\">\n            Delete post\n          </button>\n        </form>\n\n        <div className=\"float-right\">\n          <form method=\"POST\">\n            <input type=\"hidden\" name=\"_method\" value=\"update\" />\n            <Link\n              className=\"hover:underline\"\n              to={`/posts/update/${post._id}`}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-5 w-5\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </Link>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n  return (\n    <div>\n      <h1>\n        {caught.status} {caught.statusText}\n      </h1>\n      <h2>{caught.data}</h2>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }) {\n  return (\n    <h1 className=\"text-red-500 font-bold\">\n      {error.name}: {error.message}\n    </h1>\n  );\n}\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AAEA,8BAAsB;AAFtB;AAwCe,SAAR,cAA+B;AACpC,QAAM,UAAU,cAAc;AAC9B,QAAM,WAAW,IAAI,KAAK,QAAQ,WAAW;AAC7C,QAAM,OAAO,SAAS,QAAQ;AAC9B,QAAM,QAAQ,SAAS,SAAS,IAAI;AACpC,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YACC,6DAAC;AAAA,cAAG,WAAU;AAAA,cACX;AAAA,wBAAQ;AAAA,gBAET,mDAAC;AAAA,kBAAI,WAAU;AAAA,kBACb,6DAAC;AAAA,oBAAK,QAAO;AAAA,oBACX;AAAA,yEAAC;AAAA,wBAAM,MAAK;AAAA,wBAAS,MAAK;AAAA,wBAAU,OAAM;AAAA,yBAA1C;AAAA;AAAA;AAAA;AAAA,6BAAqD;AAAA,sBACrD,mDAAC;AAAA,wBAAO,MAAK;AAAA,yBAAb;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA;AAAA,qBAFxB;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,mBAJF;AAAA;AAAA;AAAA;AAAA,uBAKA;AAAA,gBACA,mDAAC;AAAA,kBAAK,WAAU;AAAA,kBAAsB;AAAA;AAAA,oBAAI,QAAQ;AAAA;AAAA,mBAAlD;AAAA;AAAA;AAAA;AAAA,uBAA2D;AAAA;AAAA,eAT7D;AAAA;AAAA;AAAA;AAAA,mBAUA;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA,iBAYA;AAAA,UACA,mDAAC;AAAA,YAAE;AAAA;AAAA,cAAO,GAAG,QAAQ;AAAA;AAAA,aAArB;AAAA;AAAA;AAAA;AAAA,iBAA6B;AAAA,UAC7B,mDAAC;AAAA,YAAE,WAAU;AAAA,YAAS;AAAA;AAAA,cAAG,QAAQ;AAAA;AAAA,aAAjC;AAAA;AAAA;AAAA;AAAA,iBAA6C;AAAA,UAC7C,mDAAC;AAAA,YAAI,WAAU;AAAA,YACZ,kBAAQ;AAAA,aADX;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SAlBF;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAA,MAMA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb;AAAA,6DAAC;AAAA,YAAK,QAAO;AAAA,YACX;AAAA,iEAAC;AAAA,gBAAM,MAAK;AAAA,gBAAS,MAAK;AAAA,gBAAU,OAAM;AAAA,iBAA1C;AAAA;AAAA;AAAA;AAAA,qBAAmD;AAAA,cACnD,mDAAC;AAAA,gBAAO,WAAU;AAAA,gBAAqE;AAAA,iBAAvF;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UAEA,mDAAC;AAAA,YAAI,WAAU;AAAA,YACb,6DAAC;AAAA,cAAK,QAAO;AAAA,cACX;AAAA,mEAAC;AAAA,kBAAM,MAAK;AAAA,kBAAS,MAAK;AAAA,kBAAU,OAAM;AAAA,mBAA1C;AAAA;AAAA;AAAA;AAAA,uBAAmD;AAAA,gBACnD,mDAAC;AAAA,kBACC,WAAU;AAAA,kBACV,IAAI,oBAAoB,QAAQ;AAAA,kBAEhC,6DAAC;AAAA,oBACC,OAAM;AAAA,oBACN,WAAU;AAAA,oBACV,SAAQ;AAAA,oBACR,MAAK;AAAA,oBAEL;AAAA,yEAAC;AAAA,wBAAK,GAAE;AAAA,yBAAR;AAAA;AAAA;AAAA;AAAA,6BAAwF;AAAA,sBACxF,mDAAC;AAAA,wBACC,UAAS;AAAA,wBACT,GAAE;AAAA,wBACF,UAAS;AAAA,yBAHX;AAAA;AAAA;AAAA;AAAA,6BAIA;AAAA;AAAA,qBAXF;AAAA;AAAA;AAAA;AAAA,yBAYA;AAAA,mBAhBF;AAAA;AAAA;AAAA;AAAA,uBAiBA;AAAA;AAAA,eAnBF;AAAA;AAAA;AAAA;AAAA,mBAoBA;AAAA,aArBF;AAAA;AAAA;AAAA;AAAA,iBAsBA;AAAA;AAAA,SA9BF;AAAA;AAAA;AAAA;AAAA,aA+BA;AAAA;AAAA,KAzDF;AAAA;AAAA;AAAA;AAAA,SA0DA;AAEJ;AAEO,SAAS,gBAAgB;AAC9B,QAAM,SAAS,SAAS;AACxB,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QACE;AAAA,iBAAO;AAAA,UAAO;AAAA,UAAE,OAAO;AAAA;AAAA,SAD1B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAI,iBAAO;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA;AAAA,KAJnB;AAAA;AAAA;AAAA;AAAA,SAKA;AAEJ;AAEO,SAAS,cAAc,EAAE,MAAM,GAAG;AACvC,SACE,mDAAC;AAAA,IAAG,WAAU;AAAA,IACX;AAAA,YAAM;AAAA,MAAK;AAAA,MAAG,MAAM;AAAA;AAAA,KADvB;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;",
  "names": []
}
